name: Cloudflare Pages へのデプロイ

on:
  push:
    branches:
      - main # main ブランチへのプッシュ時にトリガー

jobs:
  deploy:
    runs-on: ubuntu-latest # Ubuntu の最新バージョンで実行
    permissions:
      contents: read
      deployments: write
      statuses: write # コミットステータスの書き込み権限を追加

    steps:
      - uses: actions/checkout@v4
        name: リポジトリのコードをチェックアウト
        with:
          submodules: 'recursive'  # サブモジュールを再帰的に初期化
          fetch-depth: 0  # 全履歴をフェッチ

      - name: サブモジュールの更新
        run: |
          git submodule update --init --recursive
          git submodule update --remote

      - name: Flutter SDKのバージョンを読み取る
        # id: flutter_sdk_version
        run: |
          FLUTTER_SDK_VERSION=$(jq -r '.["dart.flutterSdkPath"]' .vscode/settings.json | cut -d'/' -f3)
          echo "FLUTTER_SDK_VERSION=$FLUTTER_SDK_VERSION" >> $GITHUB_ENV
        shell: bash
        # .vscode/settings.json からFlutter SDKのバージョンを抽出。 JSON読取 引用符("")なし |'/' で分割し、3番目の部分
        # GITHUB_ENVは予約語、後続のenvで使用

      - name: Flutter環境のセットアップ
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
        # 指定されたバージョンのFlutter SDKをセットアップ

      - name: .env ファイルの作成
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
        # 環境変数を.envファイルに書き込む。 pabspec.yamlが読めないため

      - name: Webアプリのビルド
        run: |
          flutter build web \
            --release \
            --web-renderer html \
            --dart-define env=.env
        # Flutterプロジェクトをウェブアプリとしてリリースモードでビルド、環境変数を使用
    
      - name: Cloudflare Pagesへのデプロイ
        id: cloudflare_pages_deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build/web --project-name=programming-sns
        # ビルドしたウェブアプリをCloudflare Pagesにデプロイ

      # # Cloudflare Pagesへのデプロイ後にキャッシュをパージ
      # - name: Cloudflare キャッシュをパージ
      #   env:
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      #   run: |
      #     response=$(curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
      #       -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
      #       -H "Content-Type: application/json" \
      #       --data '{"purge_everything":true}' \
      #       --write-out "%{http_code}" \
      #       --silent \
      #       --output /dev/null)
      #     if [ "$response" -ne 200 ]; then
      #       echo "キャッシュパージに失敗しました。HTTPステータス: $response"
      #       exit 1
      #     fi

      - name: デプロイURLをコミットステータスに追加
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '本番URL',
              description: 'Cloudflare Pagesへのデプロイ',
              state: 'success',
              sha: context.sha,
              target_url: "${{ steps.cloudflare_pages_deploy.outputs.url }}",
            })
        # デプロイされたURLをGitHubのコミットステータスとして追加